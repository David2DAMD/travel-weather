name: Lint CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  # or any other version you are using

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run tests
      run: |
        pip install pytest
        pytest

    - name: Build Docker image
      run: |
        docker build -t yormengh/my-fastapi-app:latest .

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo $GITHUB_TOKEN | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Log in to Docker Hub
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      run: |
        echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin

    - name: Tag and push to GitHub Container Registry
      run: |
        docker tag yormengh/my-fastapi-app:latest ghcr.io/yormengh/my-fastapi-app:latest
        docker push ghcr.io/yormengh/my-fastapi-app:latest

    - name: Tag and push to Docker Hub
      run: |
        docker tag yormengh/my-fastapi-app:latest yormengh/my-fastapi-app:latest
        docker push yormengh/my-fastapi-app:latest

  notify:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Send notification
      if: failure()
      uses: appleboy/telegram-action@v0.2.0
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: 'Build failed! Please check the logs.'

    - name: Send notification
      if: success()
      uses: appleboy/telegram-action@v0.2.0
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: 'Build succeeded! Everything is fine.'



